<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.day03_mybatis.test5.OOMapper">
	<!-- 根据c_id得到对应Classes对象(包含Teacher对象) -->
	
	<!-- 
		嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集
		select * from class c, teacher t where c.teacher_id=t.t_id and  c.c_id=1
	 -->
	<select id="getClass" parameterType="int" resultMap="ClassResultMap">
		select * from class c, teacher t where c.teacher_id=t.t_id and  c.c_id=#{id}
	</select>
	<resultMap type="_Classes" id="ClassResultMap">
		<id property="id" column="c_id"/>
		<result property="name" column="c_name"/>
		<association property="teacher" column="teacher_id" javaType="_Teacher">
			<id property="id" column="t_id"/>
			<result property="name" column="t_name"/>
		</association>
	</resultMap>
	
	<!-- 
		嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型
			SELECT * FROM class WHERE c_id=1;
			SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值
	 -->
	 
	 <select id="getClass2" parameterType="int" resultMap="ClassResultMap2">
	 	select * from class where c_id=#{id}
	 </select>
	 <resultMap type="_Classes" id="ClassResultMap2">
	 	<id property="id" column="c_id"/>
	 	<result property="name" column="c_name"/>
	 	<association property="teacher" column="teacher_id" javaType="_Teacher" select="getTeacher"></association>
	 </resultMap>
	 
	 <select id="getTeacher" parameterType="int" resultType="_Teacher">
	 	SELECT t_id id, t_name name FROM teacher WHERE t_id=#{id}
	 </select>
	 
	 <!-- 
		嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集
		SELECT * FROM class c, teacher t,student s WHERE c.teacher_id=t.t_id AND c.C_id=s.class_id AND  c.c_id=1
	 -->
	<select id="getClass3" parameterType="int" resultMap="ClassResultMap3">
		select * from class c, teacher t,student s where c.teacher_id=t.t_id and c.C_id=s.class_id and  c.c_id=#{id}
	</select>
	<resultMap type="_Classes" id="ClassResultMap3">
		<id property="id" column="c_id"/>
		<result property="name" column="c_name"/>
		<association property="teacher" column="teacher_id" javaType="_Teacher">
			<id property="id" column="t_id"/>
			<result property="name" column="t_name"/>
		</association>
		<!-- ofType指定students集合中的对象类型 -->
		<collection property="students" ofType="_Student">
			<id property="id" column="s_id"/>
			<result property="name" column="s_name"/>
		</collection>
	</resultMap>
	
	<!-- 
		嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型
			SELECT * FROM class WHERE c_id=1;
			SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值
			SELECT * FROM student WHERE class_id=1  //1是第一个查询得到的c_id字段的值
	 -->
	 
	 <select id="getClass4" parameterType="int" resultMap="ClassResultMap4">
	 	select * from class where c_id=#{id}
	 </select>
	 <resultMap type="_Classes" id="ClassResultMap4">
	 	<id property="id" column="c_id"/>
	 	<result property="name" column="c_name"/>
	 	<association property="teacher" column="teacher_id" javaType="_Teacher" select="getTeacher2"></association>
	 	<collection property="students" ofType="_Student" column="c_id" select="getStudent"></collection>
	 </resultMap>
	 
	 <select id="getTeacher2" parameterType="int" resultType="_Teacher">
	 	SELECT t_id id, t_name name FROM teacher WHERE t_id=#{id}
	 </select>
	 
	 <select id="getStudent" parameterType="int" resultType="_Student">
	 	SELECT s_id id, s_name name FROM student WHERE class_id=#{id}
	 </select>
</mapper>




